7.7 they take up twice as much memory for each node
7.7 In a doubly linked list, there are more pointers to set and the mechanics of inserting and deleting are more difficult. Also, the special cases at the beginning or end of the list are more complicated.
7.7 There are more pointers to set, the mechanics of inserting into and deleting from a doubly linked list are a bit more involved than for a singly linked list.
7.7 Insertion and deletion with a doubly linked list are more involved than with a singly linked list leaving more room for error and complex algorithms.
7.7 Need more memory to store "previous" pointers.
7.7 a node in a doubly linked list takes up more memory than a node in a singly linked list.
7.7 You have to keep up with where you are and you have to consider the predecessor and successor connections when inserting/deleting.
7.7 Each node requires an extra node, requires more memory, and is more difficult to insert and remove individual nodes
7.7 Double-linked lists require more space per node, and their elementary operations are more expensive
7.7 More difficult to delete and create nodes.
7.7 They use more memory and you have to make 2 pointers and update 2 pointers each time you change the list.
7.7 nodes take up more memory
7.7 Each node requires an extra pointer (space requirements increased), Insertion or deletion of a node takes a longer (more pointer operations).
7.7 its a little more confusing. The special cases at the end and beginning become more difficult to do. 
7.7 increased actions to add and remove elements to the linked list.
7.7 Inserting and deleting in a double-linked list is more involved, and has special cases at the beginning and end.
7.7 The main disadvanate is that if hard to remove all items in the list.
7.7 each node requires an extra pointer, taking up more storage.  insertions and deletions require more pointer operations.
7.7 in a doubly linked list there are twice as many pointers for each element , therefore more memory is used
7.7 The process of adding and removing Nodes in a Doubly linked list is more complex than in a basic linked list
7.7 Double linked lists require more space per node, and their elementary operation are more expensive
7.7 1- each node requires an extra pointer, requiring more space<br>2- the insertion or deletion of a node takes a bit longer, more pointer operations
7.7 It takes up twice the storage needed.
7.7 using more pointers to enable the backward movement takes up more memory, having more pointers make it slightly more work to add or remove a node from the list
7.7 increased memory requirements, slightly more complicated when modifying elements in the list
7.7 not answered
