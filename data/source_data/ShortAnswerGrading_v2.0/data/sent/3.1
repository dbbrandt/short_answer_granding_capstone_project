3.1 It includes the name of the program, the type of parameters it can take. <STOP> It should also include a brief description of what the function does. <STOP>
3.1 it includes the specific information about the function such as input and output variable types and how many of each. <STOP>
3.1 The function signature includes the name of the function and the types of its arguments. <STOP>
3.1 A function signature consists of the function prototype. <STOP> This tells you the general information about a function, its name, parameters, what scope it is in, and other miscellaneous information. <STOP>
3.1 It includes the name of the function and the types of its arguments. <STOP>
3.1 Name, paramaters, scope, and other general function information <STOP>
3.1 It includes a function name and parameter list. <STOP> Does not include return type. <STOP> Function signatures must be different. <STOP>
3.1 input parameters and return type <STOP>
3.1 The portion of the function prototyp tha has the function name and the arguments but NOT the return type. <STOP>
3.1 Name of the function and the types of it is arguments <STOP>
3.1 The name of the function and the types of its arguments. <STOP>
3.1 Includes the name of the function and the types of its arguments. <STOP>
3.1 identification of a function and the data types of its parameters, it has the name, and the data type variables <STOP>
3.1 a return type, and input parameters <STOP>
3.1 The function signature includes the method name and the input types. <STOP>
3.1 A function signature includes the name of the function and types of arguments, but not the return type. <STOP>
3.1 The signature can include a result type and thrown errors. <STOP>
3.1 function name, and input paramaters <STOP>
3.1 The name of the function and the types of its arguments. <STOP> This includes the number, type, and order the parameters appear in. <STOP>
3.1 the name of the function and the types of its arguments <STOP>
3.1 A function signature includes the name of the function and the types of its arguments <STOP>
3.1 A function signature includes a function 's return type, parameters and semi-colon. <STOP>
3.1 the name of the function and the types of its arguments <STOP>
3.1 the function 's name and parameters <STOP>
3.1 The name of the function and the types of its arguments. <STOP>
3.1 The portion of a function prototype that includes the name of the function and the types of its arguments <STOP>
3.1 the name of the function and its parameters <STOP>
3.1 The function name and parameters <STOP>
3.1 name of function and types of arguments <STOP>
3.1 a function 's return type and parameter list <STOP>
3.1 it includes the name of the function, and the types of its arguments. it does not specify the function return type. <STOP> Function in the same scope must have unqiue signatures. <STOP>
