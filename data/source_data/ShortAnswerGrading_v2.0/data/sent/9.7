9.7 A stack, some printing jobs might have a higher priority than others and they can be easily inserted at the front of the list or anywhere between. <STOP>
9.7 a queue otherwise some things would never be printed. <STOP>
9.7 A queue is more appropriate for scheduling printing jobs because queues have first in first out behavior. <STOP>
9.7 Queue, its better to be FIFO than LIFO -LRB- stack -RRB- . <STOP>
9.7 Queue of course! <STOP>
9.7 Queue, the person who wanted to print first should be first served. <STOP>
9.7 queue because it guarantees that job are executed in the order they come in. <STOP>
9.7 queue <STOP>
9.7 Queues would be preferable to stacks for use as scheduling print jobs because it would print jobs in the order that they were sent to the printer. <STOP>
9.7 a queue. <STOP>
9.7 queue <STOP>
9.7 a queue <STOP>
9.7 Queue 's are more appropriate, as printers are usually first come, first serve. <STOP>
9.7 queue <STOP>
9.7 queue, because of the first in first out principles, and if it was a stack it would be last in last out, because it could possibly not let the first item that was added get removed in a timely manner. <STOP>
9.7 Queue <STOP>
9.7 a queue <STOP>
9.7 A Queue data structure is more appropriate for scheduling printing jobs at a printer. <STOP> The first job sent to the printer is the first job printed. <STOP>
9.7 a queue. <STOP> It would not be unfair for the first job to finish last. <STOP>
9.7 a queue, because it takes the job that has waited the longest <STOP>
9.7 A queue is more appropriate, because the clients which have waited the longest should be the first served. <STOP>
9.7 Queue <STOP>
9.7 a queue <STOP>
9.7 Queue <STOP>
9.7 i would say that a queue is better because the first thing you try to print should be the first one to come out of the printer -LRB- FIFO -RRB- <STOP>
9.7 a queue, because you want the jobs to execute in the order that they are received <STOP>
9.7 queue <STOP>
