12.5 A link list can grow to a infinite size as a array has a fixes size. <STOP>
12.5 The advantage of linked lists is that they are not limited in size like arrays. <STOP>
12.5 link lists dont have a fixed size <STOP>
12.5 Linked Lists can be of variable size, where arrays have fixed size. <STOP>
12.5 Linked lists do not have a definite size. <STOP> They can be as big or as small as needed, and they do not have to allocate extra memory for elements you do not need. <STOP> Arrays size must be defined. <STOP>
12.5 a linked list has a dynamic size, but an array only has a fixed size and takes allot of extra operations to increase its size. <STOP>
12.5 You do not have to predetermine your list size as you do with arrays. <STOP> Linked list have the ability to be as large as you want them adding memory as needed. <STOP>
12.5 The main advantage to a linked list is that it can have it is size adjusted during runtime. <STOP>
12.5 Linked lists are able to grow in size. <STOP> So elements can be added to the list. <STOP>
12.5 Linked lists are not confined to a specific size, and can have elements added and removed far easier. <STOP> They are also easier to traverse. <STOP>
12.5 There is no predetermined length <STOP>
12.5 Inserts into a linked list are far cheaper than an insert into an array. <STOP> With an array, all items after the one being inserted must me shifted, with a linked list, only the pointers are replaced. <STOP>
12.5 Linked lists may be dynamically grown. <STOP>
12.5 Linked lists are very dynamic in that they can change and be added or subtracted to very easily because they are not linear in memory. <STOP> Arrays are pre-specified in size to be cast over a certain amount of disk space. <STOP> This makes insertion into Arrays difficult because all elements must be shifted, and if you reach the end of the array, you are done even if you have more data to input. <STOP> Linked Lists do not run into these problems. <STOP>
12.5 linked lists have an indefinite size, whereas arrays are a specific size. <STOP>
12.5 Linked lists have no predefined length, and thus you can have virtually unlimited items in that list. <STOP>
12.5 They grow dynamically, unlike the fixed size array <STOP>
12.5 you can add as many nodes as you like without having to specify a list size, if an array gets too big you have to copy its entire contents to another larger array to get more room <STOP>
12.5 Linkded list does not have a fixed size. <STOP> Arrays have a fixed size. <STOP>
12.5 Linked lists have a dynamic size, where as arrays have a static size. <STOP>
12.5 linked lists do not have a memory constraint other than total memory <STOP>
12.5 The primary advantage of linked lists over arrays is their ability to become larger or smaller as data is added and removed from the list, whereas arrays may waste memory for small data sets, and run out of space for large data sets. <STOP>
12.5 Array have fixed size, in Link List are flexible for adding or deleting an element. <STOP>
12.5 they are resizeable <STOP>
12.5 Linked lists can be dynamically allocated and their size can change as needed. <STOP>
12.5 linked lists do not have to have a specified size, they are easier to add to and remove from <STOP>
12.5 they dont have a fixed size, no shiftnig needs to be done for insertion or deletion. <STOP>
12.5 linked list many be dynamically grown. <STOP> It has not limit <STOP>
