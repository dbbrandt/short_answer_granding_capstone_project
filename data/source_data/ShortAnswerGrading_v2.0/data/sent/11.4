11.4 Name of the function, parameters it must receive in order to perform and a return type. <STOP>
11.4 a function signature is the elements that make it unique such as the variables it calls for and also I suppose this includes the program it is in. <STOP>
11.4 A function signature is the return type of a function, its name, and the number and type of its parameters. <STOP>
11.4 function prototype that contains functions and data members. <STOP>
11.4 A function signature is a declaration of the function that includes the parameter types and the number of parameters. <STOP>
11.4 the declaration of the function. <STOP>
11.4 Includes the name, accepted parameters, and return type. <STOP>
11.4 its return type and its input parameters <STOP>
11.4 Contains the function name and its paramaters. <STOP> The return type is not included <STOP>
11.4 Return type, function name, and the parameter types <STOP>
11.4 The function signature tells what the function parameters and includes all the function calls <STOP>
11.4 The function 's name, as well as what it returns and what it accepts. <STOP>
11.4 the body of the function that holds all the actual code <STOP>
11.4 A function signature is the return type and accepted pass value type it takes <STOP>
11.4 A function signature specifies the name and input variables of a function. <STOP>
11.4 A function signature is the function 's parameters and their type and the name of the function. <STOP> The return type is not a part of the function signature. <STOP>
11.4 the name of the function and what it accepts or returns <STOP>
11.4 the unique identifier of a function, which includes input variables along with the function name, but excludes the output type. <STOP>
11.4 The order, number, and type of data items included inside the function parameters. <STOP>
11.4 its the scope, type, and parameters of that function that give it it is properties and defines it against other functions. <STOP>
11.4 is the name of the fuction, return type, and parameters that are being used <STOP>
11.4 a function signature should include the name of the function, parameters, and a body. <STOP>
11.4 the name of the function and the arguments passed to that function <STOP>
11.4 A function signature, used in a function 's prototype, is the set of object types it take in as parameters, with or without names given for the objects. <STOP>
11.4 function name and parameter are called function signature. <STOP>
11.4 fuction name and parameters <STOP>
11.4 The parameters needed, the return type, and name of the function. <STOP>
11.4 the signature of a function includes the name of the function, the number and types of parameters, and the return type <STOP>
11.4 It is what uniquely separates overloaded functions. <STOP> It includes the return type, and the parameter list of the function. <STOP>
11.4 function sig is, is what is the class recognizes as the main function, or rather its specification <STOP>
